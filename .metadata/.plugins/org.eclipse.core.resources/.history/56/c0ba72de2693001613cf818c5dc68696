package sensor;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class SensorLoader {
	private Obstacle[][] obstacleFloorPlan;
	private Tiling[][] tileFloorPlan;
	//private XMLReader readFilePlan;
	private ArrayList<Obstacle> obstacles;	
	public SensorLoader(){
		obstacles = new ArrayList<Obstacle>();
		obstacleFloorPlan = new Obstacle[100][100];
		tileFloorPlan = new Tiling[100][100];
	}
	public void ObstaclesFloorPlan() throws ParserConfigurationException, SAXException, IOException{
		File obstacleFile = new File("ObstaclesFloorPlan.xml");
		 DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
         DocumentBuilder db = dbf.newDocumentBuilder();
         if (!obstacleFile.exists()) {
             System.err.println("**** XML File '" + obstacleFile + "' cannot be found");
             System.exit(-1);
         }
         Document parsing = db.parse(obstacleFile);
         parsing.getDocumentElement().normalize();
         NodeList entry = parsing.getDocumentElement().getChildNodes();
         for(int i=0; i < entry.getLength();i++){
        	 if (entry.item(i).getNodeType() == Node.TEXT_NODE) {
                 continue;
             }
             String entryName = entry.item(i).getNodeName();
             Element elem = (Element) entry.item(i);
             NodeList getChildNode = elem.getElementsByTagName("x");
             for(int j =0; j < getChildNode.getLength();j++){
            	 String x = elem.getElementsByTagName("x").item(j).getTextContent().trim();
                 String y = elem.getElementsByTagName("y").item(j).getTextContent().trim();
                 obstacles.add(ObstacleFactory.getObstacle(entryName, Integer.parseInt(x), 
                 Integer.parseInt(y)));
                 obstacleFloorPlan[Integer.parseInt(x)][Integer.parseInt(y)] = 
                 ObstacleFactory.getObstacle(entryName, Integer.parseInt(x), Integer.parseInt(y));
                 System.out.println(entryName + " X: " + x + " Y: "+ y);
             } 
         }
	}
}